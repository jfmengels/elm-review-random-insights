[{"name":"FindUntestedModules","comment":"\n\n@docs rule\n\n","unions":[],"aliases":[],"values":[{"name":"rule","comment":" Finds the modules which are not directly imported by a test module.\n\n    config =\n        [ FindUntestedModules.rule\n        ]\n\nThis is a very crude way of attempting to find untested modules. [Code coverage tools](https://github.com/zwilias/elm-coverage)\ndo a better job at this than this rule could, but there may some blind spots that this rule can cover.\n\nFor instance, you might have some complex function being run as part of your tests without explicitly testing the function itself,\nmeaning that a code coverage tool would indicate the function as being tested, whereas in practice it may not be tested properly.\n\nBoth systems have blind spots, and maybe this kind of insight can help you detect which modules deserve more extensive testing.\n\n\n## Try it out\n\nYou can try this rule out by running the following command:\n\n```bash\nelm-review --template jfmengels/elm-review-random-insights/preview --report=json --extract | jq -r '.extracts.FindUntestedModules'\n```\n\n","type":"Review.Rule.Rule"}],"binops":[]}]